#pragma once

#include "CtrlViewDocumentInterface.h"

class NFmiEditMapGeneralDataDoc;

class CtrlViewDocumentInterfaceForGeneralDataDoc : public CtrlViewDocumentInterface
{
    NFmiEditMapGeneralDataDoc *itsDoc;
public:
    CtrlViewDocumentInterfaceForGeneralDataDoc(NFmiEditMapGeneralDataDoc *theDoc);
    ~CtrlViewDocumentInterfaceForGeneralDataDoc() = default;

    CtrlViewUtils::MapViewMode MapViewDisplayMode(int theMapViewDescTopIndex) override;
    const NFmiPoint& ViewGridSize(int theMapViewDescTopIndex) override;
    int MapRowStartingIndex(int theMapViewDescTopIndex) override;
    CtrlViewUtils::GraphicalInfo& GetGraphicalInfo(int theMapViewDescTopIndex) override;
    bool CreateMaskSelectionPopup(int theRowIndex) override;
    boost::shared_ptr<NFmiAreaMaskList> ParamMaskListMT() override;
    bool CreateMaskParamsPopup(int theRowIndex, int theParamIndex) override;
    bool CreateParamSelectionPopup(unsigned int theDescTopIndex, int theRowIndex) override;
    void ActivateParamSelectionDlgAfterLeftDoubleClick(bool newValue) override;
    bool ScrollViewRow(unsigned int theDescTopIndex, int theCount) override;
    const std::string& HelpDataPath(void) const override;
	const std::string& ControlPath(void) const;
	void LogAndWarnUser(const std::string& theMessageStr, const std::string& theDialogTitleStr, CatLog::Severity severity, CatLog::Category category, bool justLog, bool addAbortOption = false, bool flushLogger = false) override;
    NFmiInfoOrganizer* InfoOrganizer(void) override;
    bool IsToolMasterAvailable(void) override;
    NFmiDrawParamList* DrawParamList(int theDescTopIndex, int theIndex) override;
    NFmiDrawParamList* TimeSerialViewDrawParamList(void) override;
    const NFmiColor& HelpColor(void) const override;
    NFmiProducerSystem& ProducerSystem(void) override;
    NFmiProducerSystem& ObsProducerSystem(void) override;
    FmiLanguage Language() override;
    const NFmiPoint& CrossSectionViewSizeInPixels(void) override;
    const NFmiPoint& MapViewSizeInPixels(int theMapViewDescTopIndex) override;
    bool Printing() override;
    bool CreateMapViewTimeBoxPopup(unsigned int theDescTopIndex);
    bool CreateViewParamsPopup(unsigned int theDescTopIndex, int theRowIndex, int layerIndex, double layerIndexRealValue) override;
    void RefreshApplicationViewsAndDialogs(const std::string &reasonForUpdate, bool fMakeAreaViewDirty = false, bool fClearCache = false, int theWantedMapViewDescTop = -1) override;
    void RefreshApplicationViewsAndDialogs(const std::string& reasonForUpdate, SmartMetViewId updatedViewsFlag, bool redrawMapView = false, bool clearMapViewBitmapCacheRows = false, int theWantedMapViewDescTop = -1) override;
    bool ExecuteCommand(const NFmiMenuItem &theMenuItem, int theViewIndex, int theViewTypeId) override;
    bool ChangeParamSettingsToNextFixedDrawParam(unsigned int theDescTopIndex, int theMapRow, int theParamIndex, bool fNext) override;
    bool ChangeActiveMapViewParam(unsigned int theDescTopIndex, int theMapRow, int theParamIndex, bool fNext, bool fUseCrossSectionParams) override;
    bool MoveActiveMapViewParamInDrawingOrderList(unsigned int theDescTopIndex, int theMapRow, bool fRaise, bool fUseCrossSectionParams) override;
    void CheckAnimationLockedModeTimeBags(unsigned int theDescTopIndex, bool ignoreSatelImages) override;
    bool MouseCaptured(void) override;
    void MouseCaptured(bool newValue) override;
    void SetModelRunOffset(boost::shared_ptr<NFmiDrawParam> &theDrawParam, int theMoveByValue, unsigned int theDescTopIndex, int theViewRowIndex) override;
    bool SetNearestBeforeModelOrigTimeRunoff(boost::shared_ptr<NFmiDrawParam> &theDrawParam, const NFmiMetTime &theTime, unsigned int theDescTopIndex, int theViewRowIndex) override;
    const NFmiMetTime& CurrentTime(unsigned int theDescTopIndex) override;
    bool CurrentTime(unsigned int theDescTopIndex, const NFmiMetTime& newCurrentTime, bool fStayInsideAnimationTimes = false) override;
    boost::shared_ptr<NFmiDrawParam> DefaultEditedDrawParam(void) override;
    NFmiAnimationData& AnimationData(int theMapViewDescTopIndex) override;
    NFmiTrajectorySystem* TrajectorySystem(void) override;
    const NFmiColor& GeneralColor(int theIndex) override;
    const NFmiMetTime& ActiveMapTime(void) override;
    void MakeDrawedInfoVectorForMapView(std::vector<boost::shared_ptr<NFmiFastQueryInfo> > &theInfoVector, boost::shared_ptr<NFmiDrawParam> &theDrawParam, const boost::shared_ptr<NFmiArea> &theArea) override;
    NFmiMetTime GetModelOrigTime(boost::shared_ptr<NFmiDrawParam> &theDrawParam, int theIndex = 0) override;
    void UpdateCrossSectionMacroParamDataSize(void) override;
    NFmiMTATempSystem& GetMTATempSystem(void) override;
    int SoundingViewWindBarbSpaceOutFactor() override;
    std::unique_ptr<MapHandlerInterface> GetMapHandlerInterface(int theMapViewDescTopIndex) override;
    bool KeepMapAspectRatio() override;
    double ClientViewXperYRatio(int theMapViewDescTopIndex) override;
    const NFmiRect& AreaFilterRangeLimits(void) override;
    void AreaFilterRangeLimits(const NFmiRect& theRect) override;
    const NFmiRect& AreaFilterRange(int index) override;
    void AreaFilterRange(int index, const NFmiRect& theRect) override;
    boost::shared_ptr<NFmiFastQueryInfo> EditedSmartInfo(void) override;
    NFmiDataLoadingInfo& GetUsedDataLoadingInfo(void) override;
    NFmiModelDataBlender& ModelDataBlender(void) override;
    const NFmiPoint& TimeFilterLimits(void) override;
    const NFmiPoint& TimeFilterRange(int index) override;
    void TimeFilterRange(int index, const NFmiPoint& thePoint, bool fRoundToNearestHour) override;
    CtrlViewUtils::FmiSmartMetEditingMode SmartMetEditingMode(void) override;
    bool EditedDataNeedsToBeLoaded() override;
    NFmiMilliSecondTimer& EditedDataNeedsToBeLoadedTimer(void) override;
    const NFmiTimeDescriptor& TimeControlViewTimes(unsigned int theDescTopIndex) override;
    void TimeControlViewTimes(unsigned int theDescTopIndex, const NFmiTimeDescriptor &newTimeDescriptor) override;
    const NFmiMetTime& TimeFilterStartTime(void) override;
    const NFmiMetTime& TimeFilterEndTime(void) override;
    void SetTimeFilterStartTime(const NFmiMetTime& theTime) override;
    void SetTimeFilterEndTime(const NFmiMetTime& theTime) override;
    void TimeControlTimeStep(int theMapViewDescTopIndex, float timeStepInHours) override;
    float TimeControlTimeStep(int theDescTopIndex) override;
    long TimeControlTimeStepInMinutes(int theDescTopIndex) const override;
    void MapViewDirty(unsigned int theDescTopIndex, bool makeNewBackgroundBitmap, bool clearMapViewBitmapCacheRows, bool redrawMapView, bool clearMacroParamDataCache, bool clearEditedDataDependentCaches, bool updateMapViewDrawingLayers) override;
    void ForceStationViewRowUpdate(unsigned int theDescTopIndex, unsigned int theRealRowIndex) override;
    bool SetDataToNextTime(unsigned int theDescTopIndex, bool fStayInsideAnimationTimes = false) override;
    bool SetDataToPreviousTime(unsigned int theDescTopIndex, bool fStayInsideAnimationTimes = false) override;
    void TimeSerialViewTimeBag(const NFmiTimeBag &theTimeBag) override;
    const NFmiTimeBag& TimeSerialViewTimeBag(void) const override;
    bool MouseCapturedInTimeWindow(void) override;
    void MouseCapturedInTimeWindow(bool newValue) override;
    const NFmiPoint& TimeSerialViewSizeInPixels(void) const override;
    void TimeSerialViewSizeInPixels(const NFmiPoint &newValue) override;
    int FilterDialogUpdateStatus(void) override;
    void FilterDialogUpdateStatus(int newState) override;
    void ResetTimeFilterTimes() override;
    NFmiCrossSectionSystem* CrossSectionSystem(void) override;
    bool IsOperationalModeOn(void) override;
    bool ShowHelperData1InTimeSerialView() override;
    bool ShowHelperData2InTimeSerialView() override;
    bool ShowHelperData3InTimeSerialView() override;
    bool ShowHelperData4InTimeSerialView() override;
    bool AllowRightClickDisplaySelection(void) override;
    void AllowRightClickDisplaySelection(bool newValue) override;
    NFmiHelpEditorSystem& HelpEditorSystem(void) override;
    NFmiMetEditorOptionsData& MetEditorOptionsData(void) override;
    boost::shared_ptr<NFmiEditorControlPointManager> CPManager(bool getOldSchoolCPManager = false) override;
    boost::shared_ptr<NFmiFastQueryInfo> GetNearestSynopStationInfo(const NFmiLocation &theLocation, const NFmiMetTime &theTime, bool ignoreTime, std::vector<boost::shared_ptr<NFmiFastQueryInfo> > *thePossibleInfoVector, double maxDistanceInMeters = 1000. * kFloatMissing) override;
    bool IsMasksUsedInTimeSerialViews(void) override;
    NFmiAnalyzeToolData& AnalyzeToolData(void) override;
    const NFmiPoint& OutOfEditedAreaTimeSerialPoint(void) const override;
    const NFmiPoint& PreciseTimeSerialLatlonPoint() const override;
    bool IsPreciseTimeSerialLatlonPointUsed() override;
    bool TimeSerialViewDirty(void) override;
    void TimeSerialViewDirty(bool newValue) override;
    bool CreateTimeSerialDialogPopup(int index) override;
    bool CreateTimeSerialDialogOnViewPopup(int index) override;
    bool DoTimeSeriesValuesModifying(boost::shared_ptr<NFmiDrawParam> &theModifiedDrawParam, int theUsedMask, NFmiTimeDescriptor& theTimeDescriptor, std::vector<double> &theModificationFactorCurvePoints, NFmiMetEditorTypes::FmiUsedSmartMetTool theEditorTool, bool fUseSetForDiscreteData, int theUnchangedValue = -1) override;
    void UpdateToModifiedDrawParam(unsigned int mapViewDescTopIndex, boost::shared_ptr<NFmiDrawParam>& drawParam, int viewRowIndex) override;
    bool UseTimeSerialAxisAutoAdjust(void) override;
    bool UseQ2Server(void) override;
    bool Registry_ShowLastSendTimeOnMapView() override;
    double Registry_MaximumFontSizeFactor() override;
    bool Registry_ShowStationPlot(int theMapViewDescTopIndex) override;
    int Registry_SpacingOutFactor(int theMapViewDescTopIndex) override;
    bool Registry_ShowMasksOnMap(int theMapViewDescTopIndex) override;
    NFmiIgnoreStationsData& IgnoreStationsData(void) override;
    const NFmiColor& StationPointColor(int theMapViewDescTopIndex) const override;
    const NFmiPoint& StationPointSize(int theMapViewDescTopIndex) const override;
    NFmiMacroParamSystem& MacroParamSystem(void) override;
    CtrlViewUtils::FmiEditorModifyToolMode ModifyToolMode(void) override;
    size_t SelectedGridPointLimit(void) override;
    boost::shared_ptr<NFmiDrawParam> GetDrawDifferenceDrawParam(void) override;
    boost::shared_ptr<NFmiDrawParam> GetSelectedGridPointDrawParam(void) override;
    bool DrawSelectionOnThisView(void) override;
    void DrawSelectionOnThisView(bool newValue) override;
    const NFmiPoint& ToolTipLatLonPoint(void) const override;
    void ToolTipLatLonPoint(const NFmiPoint& theLatLon) override;
    int ToolTipMapViewDescTopIndex() const override;
    void ToolTipMapViewDescTopIndex(int newIndex) override;
    void ToolTipTime(const NFmiMetTime& theTime) override;
    const NFmiMetTime& ToolTipTime(void) override;
    TimeSerialModificationDataInterface& GenDocDataAdapter(void) override;
    bool UseMultithreaddingWithModifyingFunctions(void) override;
    std::string GetModelOrigTimeString(boost::shared_ptr<NFmiDrawParam> &theDrawParam, int theIndex = 0) override;
    NFmiObsComparisonInfo& ObsComparisonInfo(void) override;
    void GetDataFromQ2Server(const std::string &theURLStr, const std::string &theParamsStr, bool fUseBinaryData,
        int theUsedCompression, NFmiDataMatrix<float> &theDataMatrixOut, std::string &theExtraInfoStrOut) override;
    void SetMacroErrorText(const std::string &theErrorStr) override;
    const NFmiPoint& StationDataGridSize(void) override;
    NFmiLocationSelectionTool* LocationSelectionTool2(void) override;
    void SelectLocations(unsigned int theDescTopIndex, boost::shared_ptr<NFmiFastQueryInfo> &theInfo, const boost::shared_ptr<NFmiArea> &theMapArea, 
        const NFmiPoint& theLatLon, const NFmiMetTime &theTime, int theSelectionCombineFunction, unsigned long theMask
        , bool fMakeMTAModeAdd, bool fDoOnlyMTAModeAdd) override;
    NFmiEditMapDataListHandler* DataLists(void) override;
    bool ShowObsComparisonOnMap(int theDescTopIndex) override;
    std::vector<boost::shared_ptr<NFmiFastQueryInfo> > GetSortedSynopInfoVector(int theProducerId, int theProducerId2 = -1, int theProducerId3 = -1, int theProducerId4 = -1) override;
    int AbsoluteActiveViewRow(unsigned int theDescTopIndex) override;
    void AbsoluteActiveViewRow(unsigned int theDescTopIndex, int theAbsoluteActiveRowIndex) override;
	NFmiSynopPlotSettings* SynopPlotSettings(void) override;
    NFmiSynopStationPrioritySystem* SynopStationPrioritySystem(void) override;
    NFmiPoint ActualMapBitmapSizeInPixels(unsigned int theDescTopIndex) override;
    NFmiConceptualModelData& ConceptualModelData(void) override;
    void MakeHTTPRequest(const std::string &theUrlStr, std::string &theResponseStrOut, bool fDoGet) override;
    bool LeftMouseButtonDown(void) override;
    void LeftMouseButtonDown(bool newState) override;
    bool RightMouseButtonDown(void) override;
    void RightMouseButtonDown(bool newState) override;
    bool MiddleMouseButtonDown(void) override;
    void MiddleMouseButtonDown(bool newState) override;
    NFmiDrawParamList* CrossSectionViewDrawParamList(int theRowIndex) override;
    NFmiSmartToolInfo* SmartToolInfo(void) override;
    void SetLatestMacroParamErrorText(const std::string& theErrorText) override;
    bool CreateCrossSectionViewPopup(int theRowIndex) override;
    const NFmiRect& RelativeMapRect(int theDescTopIndex) override;
    bool BetaProductGenerationRunning() override;
    const NFmiMetTime& LastEditedDataSendTime() override;
    bool IsLastEditedDataSendHasComeBack() override;
    bool DataModificationInProgress(void) override;
    void ActiveMapDescTopIndex(unsigned int newValue) override;
    const NFmiRect& UpdateRect(void) override;
    void UpdateRect(const NFmiRect& theRect) override;
    int ToolTipRealRowIndex(void) override;
    void ToolTipRealRowIndex(int newRealRowIndex) override;
    void DoAutoZoom(unsigned int theDescTopIndex) override;
    bool MapMouseDragPanMode(void) override;
    void MapMouseDragPanMode(bool newState) override;
    void MapViewBitmapDirty(int theDescTopIndex, bool dirtyFlag) override;
    NFmiSatelliteImageCacheSystem& SatelliteImageCacheSystem() override;
    CWnd* TransparencyContourDrawView(void) override;
    NFmiGridPointCache& GridPointCache(int theDescTopIndex) override;
    NFmiMapViewCache& MapViewCache(int theDescTopIndex) override;
    CDC* CopyCDC(int theDescTopIndex) override;
    bool IsCPGridCropInAction(void) override;
    bool ShowSoundingMarkersOnMap(int theDescTopIndex) override;
    bool ShowCrossSectionMarkersOnMap(int theDescTopIndex) override;
    bool ShowTrajectorsOnMap(int theDescTopIndex) override;
    std::vector<NFmiProducer>& ExtraSoundingProducerList(void) override;
    bool ShowWarningMarkersOnMap(int theDescTopIndex) override;
    CDC* MapBlitDC(int theDescTopIndex) override;
    int ToolTipColumnIndex() const override;
    void ToolTipColumnIndex(int newIndex) override;
    bool HasActiveViewChanged(void) override;
    void LastBrushedViewTime(const NFmiMetTime& newTime) override;
    void LastBrushedViewRealRowIndex(int newRealRowIndex) override;
    const NFmiTimeBag& EditedDataTimeBag(void) override;
    const boost::shared_ptr<NFmiArea> CPGridCropLatlonArea(void) override;
    bool IsCPGridCropNotPlausible(void) override;
    boost::shared_ptr<NFmiArea> CPGridCropInnerLatlonArea(void) override;
    NFmiWindTableSystem& WindTableSystem(void) override;
    NFmiProjectionCurvatureInfo* ProjectionCurvatureInfo(void) override;
    bool DrawLandBorders(int theDescTopIndex, NFmiDrawParam* separateBorderLayerDrawOptions) override;
    const NFmiColor& LandBorderColor(int theDescTopIndex, NFmiDrawParam* separateBorderLayerDrawOptions) override;
    int LandBorderPenSize(int theDescTopIndex, NFmiDrawParam* separateBorderLayerDrawOptions) override;
    Gdiplus::Bitmap* LandBorderMapBitmap(unsigned int theDescTopIndex, NFmiDrawParam* separateBorderLayerDrawOptions) const override;
    void SetLandBorderMapBitmap(unsigned int theDescTopIndex, Gdiplus::Bitmap *newBitmap, NFmiDrawParam* separateBorderLayerDrawOptions) override;
    boost::shared_ptr<Imagine::NFmiPath> LandBorderPath(int theDescTopIndex) override;
    void DrawBorderPolyLineList(int theDescTopIndex, std::list<NFmiPolyline*> &polyLineList) override;
    const std::list<std::vector<NFmiPoint>>& DrawBorderPolyLineListGdiplus(int theDescTopIndex) override;
    void DrawBorderPolyLineListGdiplus(int theDescTopIndex, const std::list<std::vector<NFmiPoint>> &newValue) override;
    void DrawBorderPolyLineListGdiplus(int theDescTopIndex, std::list<std::vector<NFmiPoint>> &&newValue) override;
    std::list<NFmiPolyline*>& DrawBorderPolyLineList(int theDescTopIndex) override;
    int DrawOverMapMode(int theDescTopIndex) override;
    void SnapShotData(boost::shared_ptr<NFmiFastQueryInfo> &theInfo, const NFmiDataIdent &theDataIdent, const std::string &theModificationText
        , const NFmiMetTime &theStartTime, const NFmiMetTime &theEndTime) override;
    bool ShowWaitCursorWhileDrawingView(void) override;
    NFmiAutoComplete& AutoComplete(void) override;
    bool ShowMouseHelpCursorsOnMap(void) override;
    bool SynopDataGridViewOn(void) override;
    bool ShowSynopHighlight(void) override;
    const NFmiPoint& GetSynopHighlightLatlon(void) override;
    bool ShowTimeString(int theDescTopIndex) override;
    NFmiMapViewTimeLabelInfo& MapViewTimeLabelInfo() override;
    const NFmiBetaProduct* GetCurrentGeneratedBetaProduct() override;
    const NFmiMetTime& ActiveViewTime(void) override;
    void ActiveViewTime(const NFmiMetTime& theTime) override;
    boost::shared_ptr<NFmiDrawParam> ActiveDrawParamFromActiveRow(unsigned int theDescTopIndex) override;
    bool ViewBrushed(void) override;
    void ViewBrushed(bool newState) override;
    bool CheckAndValidateAfterModifications(NFmiMetEditorTypes::FmiUsedSmartMetTool theModifyingTool, bool fMakeDataSnapshotAction, unsigned int theLocationMask, FmiParameterName theParam = kFmiLastParameter) override;
    void ZoomMapInOrOut(int theMapViewDescTopIndex, boost::shared_ptr<NFmiArea> &theMapArea, const NFmiPoint &theMousePoint, double theZoomFactor) override;
    bool UseMaskWithBrush(void) override;
    int BrushToolLimitSetting(void) override;
    float BrushToolLimitSettingValue(void) override;
    void MustDrawCrossSectionView(bool newValue) override;
    void MustDrawTempView(bool newValue) override;
    bool MustDrawTempView() override;
    bool TimeSerialDataViewOn(void) override;
    void MustDrawTimeSerialView(bool newValue) override;
    bool ShowSelectedPointsOnMap(int theMapViewDescTopIndex) override;
    bool ShowControlPointsOnMap(int theMapViewDescTopIndex) override;
    void ZoomMapWithRelativeRect(int theMapViewDescTopIndex, boost::shared_ptr<NFmiArea> &theMapArea, const NFmiRect &theZoomedRect) override;
    FmiDirection ParamWindowViewPosition(int theMapViewDescTopIndex) override;
    bool IsParamWindowViewVisible(int theMapViewDescTopIndex) override;
    NFmiHelpDataInfoSystem* HelpDataInfoSystem(void) override;
    bool CreateCPPopup() override;
    void PanMap(int theMapViewDescTopIndex, boost::shared_ptr<NFmiArea> &theMapArea, const NFmiPoint &theMousePoint, const NFmiPoint &theZoomDragUpPoint) override;
    void ActiveViewRect(const NFmiRect& theRect) override;
    const NFmiPoint& BrushSize(void) override;
    double BrushSpecialParamValue(void) override;
    const NFmiVPlaceDescriptor& SoundingPlotLevels(void) override;
    double BrushValue(void) override;
    boost::shared_ptr<NFmiFastQueryInfo> GetModelClimatologyData(const NFmiLevel& theLevel) override;
    boost::shared_ptr<NFmiFastQueryInfo> GetBestSuitableModelFractileData(boost::shared_ptr<NFmiFastQueryInfo>& usedOriginalInfo) override;
    boost::shared_ptr<NFmiFastQueryInfo> GetMosTemperatureMinAndMaxData() override;
    bool UseCombinedMapMode() const override;
    void UseCombinedMapMode(bool newValue) override;
    NFmiBetaProductionSystem& BetaProductionSystem() override;
    void SetLastActiveDescTopAndViewRow(unsigned int theDescTopIndex, int theActiveRowIndex) override;
    NFmiApplicationWinRegistry& ApplicationWinRegistry() override;
    Q2ServerInfo& GetQ2ServerInfo() override;
    Warnings::CapDataSystem& GetCapDataSystem() override;
    int GetTimeRangeForWarningMessagesOnMapViewInMinutes() override;
    NFmiMacroParamDataCache& MacroParamDataCache() override;
    bool SetupObsBlenderData(const NFmiPoint &theLatlon, const NFmiParam &theParam, NFmiInfoData::Type theDataType, bool fGroundData, const NFmiProducer &theProducer, NFmiMetTime &firstEditedTimeOut, boost::shared_ptr<NFmiFastQueryInfo> &usedObsBlenderInfoOut, float &analyzeValueOut, std::vector<std::string> &messagesOut) override;
    TimeSerialParameters& GetTimeSerialParameters() override;
    void UpdateOnlyGivenMapViewAtNextGeneralViewUpdate(int theMapViewDescTopIndex) override;
    NFmiColorContourLegendSettings& ColorContourLegendSettings() override;
    void SetPrintedDescTopIndex(int nowPrintedDescTopIndex) override;
    int GetPrintedDescTopIndex() override;
    void ResetPrintedDescTopIndex() override;
    unsigned int SelectedMapIndex(int mapViewDescTopIndex) override;
    void SetCPCropGridSettings(const boost::shared_ptr<NFmiArea>& newArea, unsigned int mapViewDescTopIndex) override;
    NFmiFixedDrawParamSystem& FixedDrawParamSystem() override;
    void ApplyFixeDrawParam(const NFmiMenuItem& theMenuItem, int theRowIndex, const std::shared_ptr<NFmiDrawParam>& theFixedDrawParam) override;
    NFmiMacroPathSettings& MacroPathSettings() override;
    int CurrentCrossSectionRowIndex() override;
    CombinedMapHandlerInterface& GetCombinedMapHandlerInterface() override;
    bool BorderDrawBitmapDirty(int theDescTopIndex, NFmiDrawParam* separateBorderLayerDrawOptions) const override;
    bool BorderDrawPolylinesDirty(int theDescTopIndex) const override;
    bool BorderDrawPolylinesGdiplusDirty(int theDescTopIndex) const override;
    void SetBorderDrawDirtyState(int theDescTopIndex, CountryBorderDrawDirtyState newState) override;
    double SingleMapViewHeightInMilliMeters(int theDescTopIndex) const override;
    bool IsTimeControlViewVisible(int theDescTopIndex) const override;
    TrueMapViewSizeInfo& GetTrueMapViewSizeInfo(int theDescTopIndex) const override;
    NFmiSeaLevelPlumeData& SeaLevelPlumeData() const override;

#ifndef DISABLE_CPPRESTSDK
    HakeMessage::Main& WarningCenterSystem(void) override;
    WmsSupportInterface& GetWmsSupport()  override;
#endif // DISABLE_CPPRESTSDK
};
