cmake_minimum_required(VERSION 3.14.4)
project(AutoComplete)

set(CMAKE_MFC_FLAG 2)

file( GLOB CPP_FILES source/*.cpp )
file( GLOB H_FILES include/*.h )

add_library( 
    ${PROJECT_NAME} STATIC
    ${CPP_FILES} 
    ${H_FILES} 
    )

target_link_libraries(
    ${PROJECT_NAME}
    SmartTools
    XmlLiteUtils
    Newbase
    JsonSpirit
    Q2ClientLib
    CtrlViewUtils
    WinRegistryUtils
    CatLog
    EditingDataUtils
    )

target_include_directories( 
    ${PROJECT_NAME}
    PUBLIC ${PROJECT_SOURCE_DIR}/include
    PUBLIC ${SmartTools_INCLUDE_DIRS}
    PUBLIC ${XmlLiteUtils_INCLUDE_DIRS}
    PUBLIC ${Newbase_INCLUDE_DIRS}
    PUBLIC ${JsonSpirit_INCLUDE_DIRS}
    PUBLIC ${Q2ClientLib_INCLUDE_DIRS}
    PUBLIC ${CtrlViewUtils_INCLUDE_DIRS}
    PUBLIC ${WinRegistryUtils_INCLUDE_DIRS}
    PUBLIC ${CatLog_INCLUDE_DIRS}
    PUBLIC ${EditingDataUtils_INCLUDE_DIRS}
    PUBLIC ${BOOST_INCLUDE_DIR}
    )

set(
    ${PROJECT_NAME}_INCLUDE_DIRS
    ${PROJECT_SOURCE_DIR}/include
    ${SmartTools_INCLUDE_DIRS}
    ${XmlLiteUtils_INCLUDE_DIRS}
    ${Newbase_INCLUDE_DIRS}
    ${JsonSpirit_INCLUDE_DIRS}
    ${Q2ClientLib_INCLUDE_DIRS}
    ${CtrlViewUtils_INCLUDE_DIRS}
    ${WinRegistryUtils_INCLUDE_DIRS}
    ${CatLog_INCLUDE_DIRS}
    ${EditingDataUtils_INCLUDE_DIRS}
    ${BOOST_INCLUDE_DIR}
    CACHE INTERNAL "${PROJECT_NAME}: Include Directories" FORCE
    )

